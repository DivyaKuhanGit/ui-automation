trigger:
- master
- develop

pool:
  vmImage: ubuntu-latest
# this is just using up costs till we need it  
# strategy:
#   parallel: 4

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  displayName: 'Install Node.js'

- script: |
    npm install
  displayName: 'npm install'

- script: |
    npm run cy:verify
  displayName: 'Cypress : Verify cypress install'

# - script: |
#     npm run cy:dashboard:link
#   displayName: 'Cypress : Link to dashboard'

- task: CacheBeta@1
  inputs:
    key: npm | $(Agent.OS) | package-lock.json
    path: /home/vsts/.npm
    restoreKeys: npm | $(Agent.OS) | package-lock.json
  displayName: Cache NPM packages
- task: CacheBeta@1
  inputs:
    key: cypress | $(Agent.OS) | package-lock.json
    path: /home/vsts/.cache/Cypress
    restoreKeys: cypress | $(Agent.OS) | package-lock.json
  displayName: Cache Cypress binary  

- task: Npm@1
  inputs:
    command: 'custom'
    customCommand: 'run cy:test:p'
  continueOnError: true
  displayName: 'Execute Cypress tests'

- task: PublishBuildArtifacts@1
  condition: failed() 
  displayName: "Publish Screenshots of failed tests"
  inputs:
    PathtoPublish: cypress/screenshots
    ArtifactName: CypressFailedTestScreenshots

- task: PublishBuildArtifacts@1
  condition: succeededOrFailed() 
  displayName: "Publish Cypress test video"
  inputs:
    PathtoPublish: cypress/videos
    ArtifactName: CypressTestExecutionVideo

- task: PublishTestResults@2
  condition: succeededOrFailed()  
  inputs:
      testRunner: JUnit
      testResultsFiles: '$(Build.SourcesDirectory)/test/results/*.xml'


